(module
  (import "c4wa" "printf" (func $printf (param i32) (param i32)))
  (global $@stack (mut i32) (i32.const 0))
  (memory (export "memory") 1)
  (data (i32.const 1024) "called foo(%d)\5Cn\00Trying to evaluate foo(10)? foo(20): foo(30)\5Cn\00Result is %d\5Cn\00")
  (func $foo (param $ret i32) (result i32)
    (local $@stack_entry i32)
    (set_local $@stack_entry (global.get $@stack))
    (i64.store (global.get $@stack) (i64.const 1024))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $ret)))
    (global.set $@stack (i32.sub (global.get $@stack) (i32.const 8)))
    (call $printf (global.get $@stack) (i32.const 2))
    (global.set $@stack (get_local $@stack_entry))
    (return (get_local $ret)))
  (func $main (export "main") (result i32)
    (local $@stack_entry i32)
    (local $res i32)
    (set_local $@stack_entry (global.get $@stack))
    (i64.store (global.get $@stack) (i64.const 1041))
    (global.set $@stack (i32.sub (global.get $@stack) (i32.const 0)))
    (call $printf (global.get $@stack) (i32.const 1))
    (set_local $res (if (result i32) (call $foo (i32.const 10)) (then (call $foo (i32.const 20))) (else (call $foo (i32.const 30)))))
    (i64.store (global.get $@stack) (i64.const 1088))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $res)))
    (global.set $@stack (i32.sub (global.get $@stack) (i32.const 8)))
    (call $printf (global.get $@stack) (i32.const 2))
    (global.set $@stack (get_local $@stack_entry))
    (return (i32.const 0))))
