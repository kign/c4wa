(module
  (import "c4wa" "printf" (func $printf (param i32) (param i32)))
  (global $@stack (mut i32) (i32.const 8))
  (memory (export "memory") 1)
  (data (i32.const 1024) "%.2f\0A\00")
  (func $average (param $num i32) (param $__offset i32) (result f64)
    (local $arguments i32)
    (local $x i32)
    (local $sum f64)
    (set_local $arguments (i32.sub (get_local $__offset) (i32.const 8)))
    (block $@block_1_break
      (loop $@block_1_continue
        (br_if $@block_1_break (i32.ge_s (get_local $x) (get_local $num)))
        (set_local $sum (f64.add (get_local $sum) (block (result f64) (set_local $arguments (i32.add (get_local $arguments) (i32.const 8))) (f64.load align=8 (get_local $arguments)))))
        (set_local $x (i32.add (get_local $x) (i32.const 1)))
        (br $@block_1_continue)))
    (f64.div (get_local $sum) (f64.convert_i32_s (get_local $num))))
  (func $main (export "main") (result i32)
    (local $@stack_entry i32)
    (set_local $@stack_entry (global.get $@stack))
    (f64.store align=8 (global.get $@stack) (block (result f64) (f64.store align=8 (global.get $@stack) (f64.const 12.2)) (global.set $@stack (i32.add (global.get $@stack) (i32.const 8))) (f64.store align=8 (global.get $@stack) (f64.const 22.3)) (global.set $@stack (i32.add (global.get $@stack) (i32.const 8))) (f64.store align=8 (global.get $@stack) (f64.const 4.5)) (global.set $@stack (i32.sub (global.get $@stack) (i32.const 16))) (call $average (i32.const 3) (global.get $@stack))))
    (call $printf (i32.const 1024) (global.get $@stack))
    (f64.store align=8 (global.get $@stack) (block (result f64) (f64.store align=8 (global.get $@stack) (f64.const 3.3)) (global.set $@stack (i32.add (global.get $@stack) (i32.const 8))) (f64.store align=8 (global.get $@stack) (f64.const 2.2)) (global.set $@stack (i32.add (global.get $@stack) (i32.const 8))) (f64.store align=8 (global.get $@stack) (f64.const 1.1)) (global.set $@stack (i32.add (global.get $@stack) (i32.const 8))) (f64.store align=8 (global.get $@stack) (f64.const 5.5)) (global.set $@stack (i32.add (global.get $@stack) (i32.const 8))) (f64.store align=8 (global.get $@stack) (f64.const 3.3)) (global.set $@stack (i32.sub (global.get $@stack) (i32.const 32))) (call $average (i32.const 5) (global.get $@stack))))
    (call $printf (i32.const 1024) (global.get $@stack))
    (global.set $@stack (get_local $@stack_entry))
    (i32.const 0)))
