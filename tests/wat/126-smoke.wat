(module
  (import "c4wa" "printf" (func $printf (param i32) (param i32)))
  (global $@stack (mut i32) (i32.const 1))
  (memory (export "memory") 1)
  (data (i32.const 1024) "force_stack_var(%ld)\0A\00a = %lx\0A\00k = %d\0A\00now k = %.2f\0A\00g = %.2f\0A\00[block] i = %d\0A\00[block] j = %d\0A\00i = %d, j = %d\0A\00")
  (func $force_stack_var (param $x i32)
    (local $@stack_entry i32)
    (set_local $@stack_entry (global.get $@stack))
    (i64.store (global.get $@stack) (i64.load (get_local $x)))
    (call $printf (i32.const 1024) (global.get $@stack))
    (global.set $@stack (get_local $@stack_entry)))
  (func $test_1
    (local $@stack_entry i32)
    (local $a i64)
    (set_local $@stack_entry (global.get $@stack))
    (loop $@block_1_continue
      (set_local $a (i64.const 10))
      (set_local $a (i64.mul (get_local $a) (i64.const 3)))
      (i64.store (global.get $@stack) (get_local $a))
      (call $printf (i32.const 1046) (global.get $@stack)))
    (loop $@block_2_continue
      (set_local $a (i64.const 11))
      (set_local $a (i64.mul (get_local $a) (i64.const 4)))
      (i64.store (global.get $@stack) (get_local $a))
      (call $printf (i32.const 1046) (global.get $@stack)))
    (global.set $@stack (get_local $@stack_entry)))
  (func $test_2
    (local $@stack_entry i32)
    (local $b i32)
    (local $a i64)
    (set_local $@stack_entry (global.get $@stack))
    (loop $@block_1_continue
      (set_local $a (i64.const 10))
      (set_local $a (i64.mul (get_local $a) (i64.const 3)))
      (i64.store (global.get $@stack) (get_local $a))
      (call $printf (i32.const 1046) (global.get $@stack)))
    (loop $@block_2_continue
      (set_local $b (global.get $@stack))
      (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
      (i64.store (get_local $b) (i64.const 11))
      (call $force_stack_var (get_local $b))
      (i64.store (get_local $b) (i64.mul (i64.load (get_local $b)) (i64.const 4)))
      (i64.store (global.get $@stack) (i64.load (get_local $b)))
      (call $printf (i32.const 1046) (global.get $@stack)))
    (global.set $@stack (get_local $@stack_entry)))
  (func $test_3
    (local $@stack_entry i32)
    (local $k i32)
    (local $g f64)
    (local $k@block_1 f64)
    (set_local $@stack_entry (global.get $@stack))
    (set_local $k (i32.const 10))
    (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $k)))
    (call $printf (i32.const 1055) (global.get $@stack))
    (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $k)))
    (call $printf (i32.const 1055) (global.get $@stack))
    (set_local $k@block_1 (f64.const -10.0))
    (f64.store (global.get $@stack) (get_local $k@block_1))
    (call $printf (i32.const 1063) (global.get $@stack))
    (set_local $g (f64.sub (f64.neg (get_local $k@block_1)) (f64.const 1.5)))
    (f64.store (global.get $@stack) (get_local $g))
    (call $printf (i32.const 1077) (global.get $@stack))
    (global.set $@stack (get_local $@stack_entry)))
  (func $main (export "main") (result i32)
    (local $@stack_entry i32)
    (local $i i32)
    (local $j i32)
    (local $i@block_3 i32)
    (set_local $@stack_entry (global.get $@stack))
    (set_local $i (i32.const 1))
    (block $@block_1_break
      (set_local $j (i32.const 0))
      (loop $@block_1_continue
        (br_if $@block_1_break (i32.ge_s (get_local $j) (i32.const 10)))
        (set_local $i (i32.add (get_local $i) (get_local $j)))
        (set_local $j (i32.add (get_local $j) (i32.const 1)))
        (br $@block_1_continue)))
    (block $@block_2_break
      (loop $@block_2_continue
        (br_if $@block_2_break (i32.eqz (i32.const 0)))
        (set_local $i (i32.mul (get_local $i) (i32.const 2)))
        (set_local $j (i32.lt_s (get_local $i) (i32.const 10000)))
        (br $@block_2_continue)))
    (set_local $j (i32.const 0))
    (block $@block_3_break
      (set_local $i@block_3 (i32.const 0))
      (loop $@block_3_continue
        (br_if $@block_3_break (i32.ge_s (get_local $i@block_3) (i32.const 10)))
        (set_local $j (i32.add (get_local $j) (get_local $i@block_3)))
        (set_local $i@block_3 (i32.add (get_local $i@block_3) (i32.const 1)))
        (br $@block_3_continue)))
    (set_local $i@block_3 (i32.const -11))
    (set_local $i@block_3 (i32.add (get_local $i@block_3) (get_local $j)))
    (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $i@block_3)))
    (call $printf (i32.const 1087) (global.get $@stack))
    (if (i32.gt_s (get_local $j) (i32.const 0))
      (then
        (set_local $i@block_3 (i32.const -14))
        (set_local $i (i32.sub (get_local $i) (get_local $i@block_3)))
        (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $i@block_3)))
        (call $printf (i32.const 1103) (global.get $@stack))))
    (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $i)))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $j)))
    (global.set $@stack (i32.sub (global.get $@stack) (i32.const 8)))
    (call $printf (i32.const 1119) (global.get $@stack))
    (call $test_1)
    (call $test_2)
    (call $test_3)
    (global.set $@stack (get_local $@stack_entry))
    (i32.const 0)))
