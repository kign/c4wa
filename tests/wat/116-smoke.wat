(module
  (import "c4wa" "printf" (func $printf (param i32) (param i32)))
  (global $@stack (mut i32) (i32.const 0))
  (memory (export "memory") 1)
  (data (i32.const 1024) "Tried to grow memory by %d pages, in fact it grew by ... %d pages\5Cn\00")
  (func $main (export "main") (result i32)
    (local $@stack_entry i32)
    (local $increase_by i32)
    (local $initial_size i32)
    (set_local $@stack_entry (global.get $@stack))
    (set_local $increase_by (i32.const 57))
    (set_local $initial_size (memory.size))
    (drop (memory.grow (get_local $increase_by)))
    (i64.store (global.get $@stack) (i64.const 1024))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store (global.get $@stack) (i64.extend_i32_s (get_local $increase_by)))
    (global.set $@stack (i32.add (global.get $@stack) (i32.const 8)))
    (i64.store (global.get $@stack) (i64.extend_i32_s (i32.sub (memory.size) (get_local $initial_size))))
    (global.set $@stack (i32.sub (global.get $@stack) (i32.const 16)))
    (call $printf (global.get $@stack) (i32.const 3))
    (global.set $@stack (get_local $@stack_entry))
    (i32.const 0)))
